#compdef logclean
local curcontext="$curcontext" state state_descr line
typeset -A opt_args
_arguments -C -s -S : \
'(* -)'{'--help','-h'}'[print a brief help]' \
'(* -)'{'--man','-\\?'}'[show extended help as a manpage]' \
{'(--oldformat)-O','(-O)--oldformat'}'[logfiles are in old format \<portage-2.1.1]' \
{'(--pretend -p '{'--show)-s','-s)--show'},'(--show -s '{'--pretend)-p','-p)--pretend'}}'[only show what would be removed]' \
{'(--root)-r+','(-r)--root='}'[Let ARG instead of / be root directory]:root directory:_files -/' \
{'(--keep)-k+','(-k)--keep='}'[Keep last ARG \(instead of 200\) portage calls in emerge.log]:portage calls to keep:(200)' \
{'(--older)-o+','(-o)--older='}'[Only delete files older than ARG hours]:hours:(1)' \
{'(--newer)-n+','(-n)--newer='}'[Skip scanning older than ARG hours]:hours to skip:(1)' \
{'(--xz)-x','(-x)--xz'}'[Use xz as compression program]' \
{'(--lzma)-l','(-l)--lzma'}'[Use lzma as compression program]' \
{'(--bzip2)-b','(-b)--bzip2'}'[Use bzip2 as compression program]' \
{'(--gzip)-g','(-g)--gzip'}'[Use gzip as compression program]' \
{'(--compprog)-c+','(-c)--compprog='}'[Use ARG as compression program]:compression-program:_command_names -e' \
{'(--ignore)-i','(-i)--ignore'}'[ignore installed packages for emerge.log]' \
{'(--debug -d)-D','(--debug -D)-d','(-d -D)--debug'}'[before deleting print a reason. emerge.log to stdout]' \
'1:what to clean:->cmds' \
'*::logfile:_files'
local ret=$?
case $state in
cmds)
	local cmds
	cmds=(
	'all:Do all cleanups\: emerge log elog notices builds'
	'emerge:Cleanup /var/log/emerge.log'
	'log:Remove unused files in $PORT_LOGDIR (/var/log/portage)'
	'logs:Remove unused files in $PORT_LOGDIR (/var/log/portage)'
	'elog:Remove unused files in $PORT_LOGDIR/elog'
	'notices:Remove unused files in $PORT_ENOTICE_DIR'
	'notes:Remove unused files in $PORT_ENOTICE_DIR'
	'builds:Remove unneeded data in $PORT_TMPDIR/portage (/var/tmp/portage)'
	'shortenlog:shorten logfiles FILE1 FILE2 ...'
	'help:print brief help'
	'man:print verbose manpage'
	)
	_describe -t commands 'what to clean' cmds
	ret=$?;;
esac
return ret
